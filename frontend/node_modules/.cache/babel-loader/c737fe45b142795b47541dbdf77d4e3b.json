{"ast":null,"code":"import { createStore } from 'vuex';\nlet cart = localStorage.getItem('cart');\nlet count = localStorage.getItem('count');\nexport default createStore({\n  state() {\n    return {\n      count: count ? parseInt(count) : 0,\n      cart: cart ? JSON.parse(cart) : []\n    };\n  },\n  getters: {},\n  mutations: {\n    addToCart(state, item) {\n      let found = state.cart.find(product => product.key == item.key);\n      if (found) {\n        found.quantity++;\n        found.totalPrice = found.quantity * found.price;\n      } else {\n        state.cart.push(item);\n        state.count++;\n      }\n      this.commit('saveCart');\n    },\n    removeFromCart(state, item) {\n      let index = state.cart.indexOf(item);\n      if (index > -1) {\n        state.count--;\n        state.cart.splice(index, 1);\n        state.cart.splice();\n      }\n      this.commit('saveCart');\n    },\n    decrementQuentity(state, item) {\n      let found = state.cart.find(product => product.key == item.key);\n      if (found && found.quantity > 1) {\n        found.quantity--;\n        found.totalPrice = found.quantity * found.price;\n      }\n      this.commit('saveCart');\n    },\n    saveCart(state) {\n      localStorage.setItem('cart', JSON.stringify(state.cart));\n      localStorage.setItem('count', state.count);\n    },\n    resetCart(state) {\n      state.cart = [], state.count = 0, localStorage.setItem('cart', JSON.stringify(state.cart));\n      localStorage.setItem('count', state.count);\n    }\n  },\n  actions: {},\n  modules: {}\n});","map":{"version":3,"names":["createStore","cart","localStorage","getItem","count","state","parseInt","JSON","parse","getters","mutations","addToCart","item","found","find","product","key","quantity","totalPrice","price","push","commit","removeFromCart","index","indexOf","splice","decrementQuentity","saveCart","setItem","stringify","resetCart","actions","modules"],"sources":["C:/Users/qimeng/Documents/GitHub/trading_platform/frontend/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nlet cart = localStorage.getItem('cart');\nlet count = localStorage.getItem('count');\nexport default createStore({\n  state() {\n    return {\n      count: count ? parseInt(count) : 0,\n      cart: cart ? JSON.parse(cart) : [],\n    }\n  },\n  getters: {\n  },\n  mutations: {\n\n    addToCart(state, item) {\n      let found = state.cart.find(product => product.key == item.key);\n\n      if (found) {\n        found.quantity++;\n        found.totalPrice = found.quantity * found.price;\n      } else {\n\n        state.cart.push(item);\n\n        state.count++;\n\n\n      }\n      this.commit('saveCart');\n    },\n    removeFromCart(state, item) {\n      let index = state.cart.indexOf(item);\n\n      if (index > -1) {\n\n        state.count--;\n\n        state.cart.splice(index, 1);\n        state.cart.splice()\n      }\n      this.commit('saveCart');\n    },\n    decrementQuentity(state, item) {\n\n      let found = state.cart.find(product => product.key == item.key);\n\n      if (found && found.quantity > 1) {\n        found.quantity--;\n        found.totalPrice = found.quantity * found.price;\n      }\n      this.commit('saveCart');\n    },\n    saveCart(state) {\n      localStorage.setItem('cart', JSON.stringify(state.cart));\n      localStorage.setItem('count', state.count);\n    },\n    resetCart(state) {\n      state.cart = [],\n        state.count = 0,\n        localStorage.setItem('cart', JSON.stringify(state.cart));\n      localStorage.setItem('count', state.count);\n    }\n  }\n  ,\n  actions: {\n  },\n  modules: {\n  }\n})\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,IAAIC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;AACvC,IAAIC,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AACzC,eAAeH,WAAW,CAAC;EACzBK,KAAKA,CAAA,EAAG;IACN,OAAO;MACLD,KAAK,EAAEA,KAAK,GAAGE,QAAQ,CAACF,KAAK,CAAC,GAAG,CAAC;MAClCH,IAAI,EAAEA,IAAI,GAAGM,IAAI,CAACC,KAAK,CAACP,IAAI,CAAC,GAAG;IAClC,CAAC;EACH,CAAC;EACDQ,OAAO,EAAE,CACT,CAAC;EACDC,SAAS,EAAE;IAETC,SAASA,CAACN,KAAK,EAAEO,IAAI,EAAE;MACrB,IAAIC,KAAK,GAAGR,KAAK,CAACJ,IAAI,CAACa,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,GAAG,IAAIJ,IAAI,CAACI,GAAG,CAAC;MAE/D,IAAIH,KAAK,EAAE;QACTA,KAAK,CAACI,QAAQ,EAAE;QAChBJ,KAAK,CAACK,UAAU,GAAGL,KAAK,CAACI,QAAQ,GAAGJ,KAAK,CAACM,KAAK;MACjD,CAAC,MAAM;QAELd,KAAK,CAACJ,IAAI,CAACmB,IAAI,CAACR,IAAI,CAAC;QAErBP,KAAK,CAACD,KAAK,EAAE;MAGf;MACA,IAAI,CAACiB,MAAM,CAAC,UAAU,CAAC;IACzB,CAAC;IACDC,cAAcA,CAACjB,KAAK,EAAEO,IAAI,EAAE;MAC1B,IAAIW,KAAK,GAAGlB,KAAK,CAACJ,IAAI,CAACuB,OAAO,CAACZ,IAAI,CAAC;MAEpC,IAAIW,KAAK,GAAG,CAAC,CAAC,EAAE;QAEdlB,KAAK,CAACD,KAAK,EAAE;QAEbC,KAAK,CAACJ,IAAI,CAACwB,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;QAC3BlB,KAAK,CAACJ,IAAI,CAACwB,MAAM,CAAC,CAAC;MACrB;MACA,IAAI,CAACJ,MAAM,CAAC,UAAU,CAAC;IACzB,CAAC;IACDK,iBAAiBA,CAACrB,KAAK,EAAEO,IAAI,EAAE;MAE7B,IAAIC,KAAK,GAAGR,KAAK,CAACJ,IAAI,CAACa,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,GAAG,IAAIJ,IAAI,CAACI,GAAG,CAAC;MAE/D,IAAIH,KAAK,IAAIA,KAAK,CAACI,QAAQ,GAAG,CAAC,EAAE;QAC/BJ,KAAK,CAACI,QAAQ,EAAE;QAChBJ,KAAK,CAACK,UAAU,GAAGL,KAAK,CAACI,QAAQ,GAAGJ,KAAK,CAACM,KAAK;MACjD;MACA,IAAI,CAACE,MAAM,CAAC,UAAU,CAAC;IACzB,CAAC;IACDM,QAAQA,CAACtB,KAAK,EAAE;MACdH,YAAY,CAAC0B,OAAO,CAAC,MAAM,EAAErB,IAAI,CAACsB,SAAS,CAACxB,KAAK,CAACJ,IAAI,CAAC,CAAC;MACxDC,YAAY,CAAC0B,OAAO,CAAC,OAAO,EAAEvB,KAAK,CAACD,KAAK,CAAC;IAC5C,CAAC;IACD0B,SAASA,CAACzB,KAAK,EAAE;MACfA,KAAK,CAACJ,IAAI,GAAG,EAAE,EACbI,KAAK,CAACD,KAAK,GAAG,CAAC,EACfF,YAAY,CAAC0B,OAAO,CAAC,MAAM,EAAErB,IAAI,CAACsB,SAAS,CAACxB,KAAK,CAACJ,IAAI,CAAC,CAAC;MAC1DC,YAAY,CAAC0B,OAAO,CAAC,OAAO,EAAEvB,KAAK,CAACD,KAAK,CAAC;IAC5C;EACF,CAAC;EAED2B,OAAO,EAAE,CACT,CAAC;EACDC,OAAO,EAAE,CACT;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}