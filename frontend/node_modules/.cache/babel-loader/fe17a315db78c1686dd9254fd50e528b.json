{"ast":null,"code":"define([\"../core\", \"../core/isAttached\", \"./var/rboxStyle\", \"./var/rnumnonpx\", \"./var/getStyles\", \"./support\"], function (jQuery, isAttached, rboxStyle, rnumnonpx, getStyles, support) {\n  \"use strict\";\n\n  function curCSS(elem, name, computed) {\n    var width,\n      minWidth,\n      maxWidth,\n      ret,\n      // Support: Firefox 51+\n      // Retrieving style before computed somehow\n      // fixes an issue with getting wrong values\n      // on detached elements\n      style = elem.style;\n    computed = computed || getStyles(elem);\n\n    // getPropertyValue is needed for:\n    //   .css('filter') (IE 9 only, #12537)\n    //   .css('--customProperty) (#3144)\n    if (computed) {\n      ret = computed.getPropertyValue(name) || computed[name];\n      if (ret === \"\" && !isAttached(elem)) {\n        ret = jQuery.style(elem, name);\n      }\n\n      // A tribute to the \"awesome hack by Dean Edwards\"\n      // Android Browser returns percentage for some values,\n      // but width seems to be reliably pixels.\n      // This is against the CSSOM draft spec:\n      // https://drafts.csswg.org/cssom/#resolved-values\n      if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {\n        // Remember the original values\n        width = style.width;\n        minWidth = style.minWidth;\n        maxWidth = style.maxWidth;\n\n        // Put in the new values to get a computed value out\n        style.minWidth = style.maxWidth = style.width = ret;\n        ret = computed.width;\n\n        // Revert the changed values\n        style.width = width;\n        style.minWidth = minWidth;\n        style.maxWidth = maxWidth;\n      }\n    }\n    return ret !== undefined ?\n    // Support: IE <=9 - 11 only\n    // IE returns zIndex value as an integer.\n    ret + \"\" : ret;\n  }\n  return curCSS;\n});","map":{"version":3,"names":["define","jQuery","isAttached","rboxStyle","rnumnonpx","getStyles","support","curCSS","elem","name","computed","width","minWidth","maxWidth","ret","style","getPropertyValue","pixelBoxStyles","test","undefined"],"sources":["C:/Users/qimeng/Downloads/Online-Store-main (1)/Online-Store-main/node_modules/jquery/src/css/curCSS.js"],"sourcesContent":["define( [\n\t\"../core\",\n\t\"../core/isAttached\",\n\t\"./var/rboxStyle\",\n\t\"./var/rnumnonpx\",\n\t\"./var/getStyles\",\n\t\"./support\"\n], function( jQuery, isAttached, rboxStyle, rnumnonpx, getStyles, support ) {\n\n\"use strict\";\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, #12537)\n\t//   .css('--customProperty) (#3144)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !isAttached( elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\nreturn curCSS;\n} );\n"],"mappings":"AAAAA,MAAM,CAAE,CACP,SAAS,EACT,oBAAoB,EACpB,iBAAiB,EACjB,iBAAiB,EACjB,iBAAiB,EACjB,WAAW,CACX,EAAE,UAAUC,MAAM,EAAEC,UAAU,EAAEC,SAAS,EAAEC,SAAS,EAAEC,SAAS,EAAEC,OAAO,EAAG;EAE5E,YAAY;;EAEZ,SAASC,MAAMA,CAAEC,IAAI,EAAEC,IAAI,EAAEC,QAAQ,EAAG;IACvC,IAAIC,KAAK;MAAEC,QAAQ;MAAEC,QAAQ;MAAEC,GAAG;MAEjC;MACA;MACA;MACA;MACAC,KAAK,GAAGP,IAAI,CAACO,KAAK;IAEnBL,QAAQ,GAAGA,QAAQ,IAAIL,SAAS,CAAEG,IAAK,CAAC;;IAExC;IACA;IACA;IACA,IAAKE,QAAQ,EAAG;MACfI,GAAG,GAAGJ,QAAQ,CAACM,gBAAgB,CAAEP,IAAK,CAAC,IAAIC,QAAQ,CAAED,IAAI,CAAE;MAE3D,IAAKK,GAAG,KAAK,EAAE,IAAI,CAACZ,UAAU,CAAEM,IAAK,CAAC,EAAG;QACxCM,GAAG,GAAGb,MAAM,CAACc,KAAK,CAAEP,IAAI,EAAEC,IAAK,CAAC;MACjC;;MAEA;MACA;MACA;MACA;MACA;MACA,IAAK,CAACH,OAAO,CAACW,cAAc,CAAC,CAAC,IAAIb,SAAS,CAACc,IAAI,CAAEJ,GAAI,CAAC,IAAIX,SAAS,CAACe,IAAI,CAAET,IAAK,CAAC,EAAG;QAEnF;QACAE,KAAK,GAAGI,KAAK,CAACJ,KAAK;QACnBC,QAAQ,GAAGG,KAAK,CAACH,QAAQ;QACzBC,QAAQ,GAAGE,KAAK,CAACF,QAAQ;;QAEzB;QACAE,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACF,QAAQ,GAAGE,KAAK,CAACJ,KAAK,GAAGG,GAAG;QACnDA,GAAG,GAAGJ,QAAQ,CAACC,KAAK;;QAEpB;QACAI,KAAK,CAACJ,KAAK,GAAGA,KAAK;QACnBI,KAAK,CAACH,QAAQ,GAAGA,QAAQ;QACzBG,KAAK,CAACF,QAAQ,GAAGA,QAAQ;MAC1B;IACD;IAEA,OAAOC,GAAG,KAAKK,SAAS;IAEvB;IACA;IACAL,GAAG,GAAG,EAAE,GACRA,GAAG;EACL;EAEA,OAAOP,MAAM;AACb,CAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}