{"ast":null,"code":"define([\"../core\", \"../var/document\", \"../var/documentElement\", \"../var/support\"], function (jQuery, document, documentElement, support) {\n  \"use strict\";\n\n  (function () {\n    // Executing both pixelPosition & boxSizingReliable tests require only one layout\n    // so they're executed at the same time to save the second computation.\n    function computeStyleTests() {\n      // This is a singleton, we need to execute it only once\n      if (!div) {\n        return;\n      }\n\n      container.style.cssText = \"position:absolute;left:-11111px;width:60px;\" + \"margin-top:1px;padding:0;border:0\";\n      div.style.cssText = \"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" + \"margin:auto;border:1px;padding:1px;\" + \"width:60%;top:1%\";\n      documentElement.appendChild(container).appendChild(div);\n      var divStyle = window.getComputedStyle(div);\n      pixelPositionVal = divStyle.top !== \"1%\"; // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\n      reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12; // Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n      // Some styles come back with percentage values, even though they shouldn't\n\n      div.style.right = \"60%\";\n      pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36; // Support: IE 9 - 11 only\n      // Detect misreporting of content dimensions for box-sizing:border-box elements\n\n      boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36; // Support: IE 9 only\n      // Detect overflow:scroll screwiness (gh-3699)\n      // Support: Chrome <=64\n      // Don't get tricked when zoom affects offsetWidth (gh-4029)\n\n      div.style.position = \"absolute\";\n      scrollboxSizeVal = roundPixelMeasures(div.offsetWidth / 3) === 12;\n      documentElement.removeChild(container); // Nullify the div so it wouldn't be stored in the memory and\n      // it will also be a sign that checks already performed\n\n      div = null;\n    }\n\n    function roundPixelMeasures(measure) {\n      return Math.round(parseFloat(measure));\n    }\n\n    var pixelPositionVal,\n        boxSizingReliableVal,\n        scrollboxSizeVal,\n        pixelBoxStylesVal,\n        reliableTrDimensionsVal,\n        reliableMarginLeftVal,\n        container = document.createElement(\"div\"),\n        div = document.createElement(\"div\"); // Finish early in limited (non-browser) environments\n\n    if (!div.style) {\n      return;\n    } // Support: IE <=9 - 11 only\n    // Style of cloned element affects source element cloned (#8908)\n\n\n    div.style.backgroundClip = \"content-box\";\n    div.cloneNode(true).style.backgroundClip = \"\";\n    support.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n    jQuery.extend(support, {\n      boxSizingReliable: function () {\n        computeStyleTests();\n        return boxSizingReliableVal;\n      },\n      pixelBoxStyles: function () {\n        computeStyleTests();\n        return pixelBoxStylesVal;\n      },\n      pixelPosition: function () {\n        computeStyleTests();\n        return pixelPositionVal;\n      },\n      reliableMarginLeft: function () {\n        computeStyleTests();\n        return reliableMarginLeftVal;\n      },\n      scrollboxSize: function () {\n        computeStyleTests();\n        return scrollboxSizeVal;\n      },\n      // Support: IE 9 - 11+, Edge 15 - 18+\n      // IE/Edge misreport `getComputedStyle` of table rows with width/height\n      // set in CSS while `offset*` properties report correct values.\n      // Behavior in IE 9 is more subtle than in newer versions & it passes\n      // some versions of this test; make sure not to make it pass there!\n      //\n      // Support: Firefox 70+\n      // Only Firefox includes border widths\n      // in computed dimensions. (gh-4529)\n      reliableTrDimensions: function () {\n        var table, tr, trChild, trStyle;\n\n        if (reliableTrDimensionsVal == null) {\n          table = document.createElement(\"table\");\n          tr = document.createElement(\"tr\");\n          trChild = document.createElement(\"div\");\n          table.style.cssText = \"position:absolute;left:-11111px;border-collapse:separate\";\n          tr.style.cssText = \"border:1px solid\"; // Support: Chrome 86+\n          // Height set through cssText does not get applied.\n          // Computed height then comes back as 0.\n\n          tr.style.height = \"1px\";\n          trChild.style.height = \"9px\"; // Support: Android 8 Chrome 86+\n          // In our bodyBackground.html iframe,\n          // display for all div elements is set to \"inline\",\n          // which causes a problem only in Android 8 Chrome 86.\n          // Ensuring the div is display: block\n          // gets around this issue.\n\n          trChild.style.display = \"block\";\n          documentElement.appendChild(table).appendChild(tr).appendChild(trChild);\n          trStyle = window.getComputedStyle(tr);\n          reliableTrDimensionsVal = parseInt(trStyle.height, 10) + parseInt(trStyle.borderTopWidth, 10) + parseInt(trStyle.borderBottomWidth, 10) === tr.offsetHeight;\n          documentElement.removeChild(table);\n        }\n\n        return reliableTrDimensionsVal;\n      }\n    });\n  })();\n\n  return support;\n});","map":{"version":3,"names":["define","jQuery","document","documentElement","support","computeStyleTests","div","container","style","cssText","appendChild","divStyle","window","getComputedStyle","pixelPositionVal","top","reliableMarginLeftVal","roundPixelMeasures","marginLeft","right","pixelBoxStylesVal","boxSizingReliableVal","width","position","scrollboxSizeVal","offsetWidth","removeChild","measure","Math","round","parseFloat","reliableTrDimensionsVal","createElement","backgroundClip","cloneNode","clearCloneStyle","extend","boxSizingReliable","pixelBoxStyles","pixelPosition","reliableMarginLeft","scrollboxSize","reliableTrDimensions","table","tr","trChild","trStyle","height","display","parseInt","borderTopWidth","borderBottomWidth","offsetHeight"],"sources":["C:/Users/qimeng/Downloads/Online-Store-main (1)/Online-Store-main/node_modules/jquery/src/css/support.js"],"sourcesContent":["define( [\n\t\"../core\",\n\t\"../var/document\",\n\t\"../var/documentElement\",\n\t\"../var/support\"\n], function( jQuery, document, documentElement, support ) {\n\n\"use strict\";\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\tdiv.style.cssText =\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"width:60%;top:1%\";\n\t\tdocumentElement.appendChild( container ).appendChild( div );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.right = \"60%\";\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\n\t\t// Support: IE 9 - 11 only\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\n\t\t// Support: IE 9 only\n\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\t// Support: Chrome <=64\n\t\t// Don't get tricked when zoom affects offsetWidth (gh-4029)\n\t\tdiv.style.position = \"absolute\";\n\t\tscrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tfunction roundPixelMeasures( measure ) {\n\t\treturn Math.round( parseFloat( measure ) );\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\treliableTrDimensionsVal, reliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tjQuery.extend( support, {\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelBoxStyles: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelBoxStylesVal;\n\t\t},\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\tscrollboxSize: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn scrollboxSizeVal;\n\t\t},\n\n\t\t// Support: IE 9 - 11+, Edge 15 - 18+\n\t\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\n\t\t// set in CSS while `offset*` properties report correct values.\n\t\t// Behavior in IE 9 is more subtle than in newer versions & it passes\n\t\t// some versions of this test; make sure not to make it pass there!\n\t\t//\n\t\t// Support: Firefox 70+\n\t\t// Only Firefox includes border widths\n\t\t// in computed dimensions. (gh-4529)\n\t\treliableTrDimensions: function() {\n\t\t\tvar table, tr, trChild, trStyle;\n\t\t\tif ( reliableTrDimensionsVal == null ) {\n\t\t\t\ttable = document.createElement( \"table\" );\n\t\t\t\ttr = document.createElement( \"tr\" );\n\t\t\t\ttrChild = document.createElement( \"div\" );\n\n\t\t\t\ttable.style.cssText = \"position:absolute;left:-11111px;border-collapse:separate\";\n\t\t\t\ttr.style.cssText = \"border:1px solid\";\n\n\t\t\t\t// Support: Chrome 86+\n\t\t\t\t// Height set through cssText does not get applied.\n\t\t\t\t// Computed height then comes back as 0.\n\t\t\t\ttr.style.height = \"1px\";\n\t\t\t\ttrChild.style.height = \"9px\";\n\n\t\t\t\t// Support: Android 8 Chrome 86+\n\t\t\t\t// In our bodyBackground.html iframe,\n\t\t\t\t// display for all div elements is set to \"inline\",\n\t\t\t\t// which causes a problem only in Android 8 Chrome 86.\n\t\t\t\t// Ensuring the div is display: block\n\t\t\t\t// gets around this issue.\n\t\t\t\ttrChild.style.display = \"block\";\n\n\t\t\t\tdocumentElement\n\t\t\t\t\t.appendChild( table )\n\t\t\t\t\t.appendChild( tr )\n\t\t\t\t\t.appendChild( trChild );\n\n\t\t\t\ttrStyle = window.getComputedStyle( tr );\n\t\t\t\treliableTrDimensionsVal = ( parseInt( trStyle.height, 10 ) +\n\t\t\t\t\tparseInt( trStyle.borderTopWidth, 10 ) +\n\t\t\t\t\tparseInt( trStyle.borderBottomWidth, 10 ) ) === tr.offsetHeight;\n\n\t\t\t\tdocumentElement.removeChild( table );\n\t\t\t}\n\t\t\treturn reliableTrDimensionsVal;\n\t\t}\n\t} );\n} )();\n\nreturn support;\n\n} );\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}